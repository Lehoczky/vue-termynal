import{_ as E,e as g,a3 as d,L as s,q as i,z as h,l as e,G as a,b as c}from"./chunks/framework.D0p0FCnA.js";const x=JSON.parse('{"title":"Components","description":"","frontmatter":{},"headers":[],"relativePath":"components.md","filePath":"components.md"}'),y={name:"components.md"},m={id:"spinner",tabindex:"-1"};function u(b,t,f,v,F,C){const o=a("vt-text"),n=a("v-termynal"),l=a("vt-input"),p=a("vt-progress"),k=a("Badge"),r=a("vt-spinner");return c(),g("div",null,[t[7]||(t[7]=d(`<h1 id="components" tabindex="-1">Components <a class="header-anchor" href="#components" aria-label="Permalink to &quot;Components&quot;">​</a></h1><h2 id="terminal" tabindex="-1">Terminal <a class="header-anchor" href="#terminal" aria-label="Permalink to &quot;Terminal&quot;">​</a></h2><p>The terminal is the container of each line. You can specify properties on the terminal that will be used as default values for it&#39;s children.</p><p>The following props are available:</p><table tabindex="0"><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>startDelay</code></td><td>number</td><td><code>600</code></td><td>Delay before animation, in ms.</td></tr><tr><td><code>typeDelay</code></td><td>number</td><td><code>90</code></td><td>Delay between each typed character, in ms.</td></tr><tr><td><code>lineDelay</code></td><td>number</td><td><code>1500</code></td><td>Delay between each line, in ms.</td></tr><tr><td><code>progressLength</code></td><td>number</td><td><code>40</code></td><td>Number of characters displayed as progress bar.</td></tr><tr><td><code>progressChar</code></td><td>string</td><td><code>&#39;█&#39;</code></td><td>Character to use for progress bar.</td></tr><tr><td><code>progressPercent</code></td><td>number</td><td><code>100</code></td><td>Max percent of progress.</td></tr><tr><td><code>progressDelay</code></td><td>number</td><td><code>90</code></td><td>Delay between each progress character, in ms.</td></tr><tr><td><code>spinnerType</code></td><td>string</td><td><code>dots</code></td><td>Type of each spinner, defaults to <code>dots</code>.</td></tr><tr><td><code>spinnerFrameDelay</code></td><td>number</td><td><code>80</code></td><td>Delay between each spinner frame, in ms.</td></tr><tr><td><code>spinnerDuration</code></td><td>number</td><td><code>1.5</code></td><td>Seconds to wait before finishing each spinner&#39;s animation.</td></tr><tr><td><code>cursor</code></td><td>string</td><td><code>&#39;▋&#39;</code></td><td>Character to use for cursor.</td></tr><tr><td><code>lazy</code></td><td>boolean</td><td><code>false</code></td><td>Only start the animation when the terminal enters the viewport.</td></tr><tr><td><code>forwardButton</code></td><td>boolean</td><td><code>false</code></td><td>Whether to a show the fast forward button.</td></tr><tr><td><code>restartButton</code></td><td>boolean</td><td><code>false</code></td><td>Whether to a show the restart button.</td></tr></tbody></table><p>Emitted events:</p><table tabindex="0"><thead><tr><th>Name</th><th>Argument</th><th>Description</th></tr></thead><tbody><tr><td><code>start</code></td><td>none</td><td>Emitted only once, when the terminal first starts it&#39;s animation.</td></tr><tr><td><code>before-new-line</code></td><td>HTMLElement</td><td>Emits the next line&#39;s HTML Element before it&#39;s shown.</td></tr><tr><td><code>fast-forward</code></td><td>none</td><td>Emitted when the user clicks on the fast forward button.</td></tr><tr><td><code>finish</code></td><td>none</td><td>Emitted when the terminal finished it&#39;s animation.</td></tr><tr><td><code>restart</code></td><td>none</td><td>Emitted when the user clicks on the restart button. Note: this will not trigger a <code>start</code> event afterwards.</td></tr></tbody></table><h2 id="text" tabindex="-1">Text <a class="header-anchor" href="#text" aria-label="Permalink to &quot;Text&quot;">​</a></h2><p>Simple output, no typing.</p><p>Props: <code>lineDelay</code></p><p>Example:</p><div class="language-template vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">v-termynal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">vt-text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Hello there!&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">vt-text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">v-termynal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div>`,12)),s(n,{"line-delay":0,"start-delay":0},{default:i(()=>[s(o,null,{default:i(()=>t[0]||(t[0]=[e("Hello there!")])),_:1})]),_:1}),t[8]||(t[8]=d(`<h2 id="input" tabindex="-1">Input <a class="header-anchor" href="#input" aria-label="Permalink to &quot;Input&quot;">​</a></h2><p>Simple prompt with animated user input and cursor.</p><p>Props: <code>lineDelay</code>, <code>typeDelay</code>, <code>prompt</code></p><p>The prompt specifies the characters that are displayed before each line, for example, to indicate command line inputs or interpreters (like &gt;&gt;&gt; for Python). By default, Termynal displays a <code>$</code> before each user input line.</p><p>Example:</p><div class="language-template vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">v-termynal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">vt-input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;the default input&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">vt-input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">vt-input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> prompt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&gt;&gt;&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;python prompt&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">vt-input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">vt-input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> prompt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;(.env)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;custom env prompt&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">vt-input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">v-termynal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div>`,6)),s(n,{"line-delay":0,"start-delay":0,"type-delay":0},{default:i(()=>[s(l,null,{default:i(()=>t[1]||(t[1]=[e("the default input")])),_:1}),s(l,{prompt:">>>"},{default:i(()=>t[2]||(t[2]=[e("python prompt")])),_:1}),s(l,{prompt:"(.env)"},{default:i(()=>t[3]||(t[3]=[e("custom env prompt")])),_:1})]),_:1}),t[9]||(t[9]=d(`<h2 id="progress" tabindex="-1">Progress <a class="header-anchor" href="#progress" aria-label="Permalink to &quot;Progress&quot;">​</a></h2><p>Animated progress bar.</p><p>Props: <code>lineDelay</code>, <code>progressLength</code>, <code>progressChar</code>, <code>progressPercent</code>, <code>progressDelay</code>, <code>prefix</code></p><p>Example:</p><div class="language-template vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">v-termynal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">vt-progress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">vt-progress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">progress-length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">45</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> progress-char</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">vt-progress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">progress-percent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">69</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">vt-progress</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> prefix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Calculating:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">progress-length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">26</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">v-termynal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div>`,5)),s(n,{"line-delay":0,"start-delay":0,"progress-delay":0},{default:i(()=>[s(p),s(p,{"progress-length":45,"progress-char":"."}),s(p,{"progress-percent":69}),s(p,{prefix:"Calculating:","progress-length":26})]),_:1}),h("h2",m,[t[4]||(t[4]=e("Spinner ")),s(k,{text:"since 1.1.0",vertical:"middle"}),t[5]||(t[5]=e()),t[6]||(t[6]=h("a",{class:"header-anchor",href:"#spinner","aria-label":'Permalink to "Spinner <Badge text="since 1.1.0" vertical="middle" />"'},"​",-1))]),t[10]||(t[10]=d(`<p>Animated spinner that shows through a given amount of time.</p><p>See every type of spinner at the <a href="./examples.html#spinners">examples page</a>.</p><p>props: <code>type</code>, <code>frameDelay</code>, <code>duration</code>, <code>prefix</code></p><p>Example:</p><div class="language-template vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">v-termynal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">vt-spinner</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">vt-spinner</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;aesthetic&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">vt-spinner</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;aesthetic&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> prefix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Installing&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">v-termynal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div>`,5)),s(n,{"line-delay":0,"start-delay":0,"spinner-duration":.1},{default:i(()=>[s(r),s(r,{type:"aesthetic"}),s(r,{type:"aesthetic",prefix:"Installing:"})]),_:1})])}const B=E(y,[["render",u]]);export{x as __pageData,B as default};
